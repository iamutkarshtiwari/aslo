<h1>Validation Help</h1>

<p>This page explains each of the tests used in the automated add-on validation framework.  Each section below explains the group that a test belongs to, along with details regarding each of the individual tests.
To validate your add-on, visit the "Versions and Files" page in the developers control panel, choose the version that you wish to validate, and click the "Validate" button.</p>

<h2>What do the test results mean?</h2>

<p>Just because an add-on generates warnings doesn't mean it will not be published on <abbr title="addons.mozilla.org">AMO</abbr>.  This is what you can expect from a particular result:</p>

<ul>
    <li><strong>Pass:</strong> A pass result indicates that there were no problems found with the add-on in the given area.  No changes are required to your add-on.</li>
    <li><strong>Warning:</strong> A warning indicates that something might need to be changed with the add-on.  Many warnings do not require any changes, but simply serve as a flag to you and the AMO editors that there could be a problem with your add-on.  Investigate the details given, and cross-reference them with this page to resolve the problem.</li>
    <li><strong>Failure:</strong> A failure inidicates that there is a serious problem with your add-on and it cannot be hosted on this site until it is resolved.  Failures generally mean that an add-on is unsafe or cannot be installed due to a significant problem.</li>
</ul>

<h2>Have a question that isn't answered here?</h2>
<p>If you've read this page and still have questions we're here to help:</p>
<ul>
    <li><a href="%s">Contact Us</a></li>
    <li>AMO is open source: <a href="%s">Look at the source for the validation component</a>.</li>
</ul>

<hr />

<h2>General Tests</h2>
<p>The general tests are high level tests that verify the basic structure and stability of an add-on.  They include ensuring that the add-on is in the correct file format, that it contains any required files, and that it can be extracted and installed.</p>

<dl>
<dt id="help-11">General Verification Tests</dt>
<dd>This group of tests ensures that your add-on type matches the required file extension and that the file has been successfully uploaded to the site.</dd>

<dt id="help-12">Install.rdf Verification Tests</dt>
<dd>This group of tests extracts and parses the install.rdf file found in many add-on types.  It will make sure there are no illegal elements in the file and that the versions of the applications you support are correct.</dd>

<dt id="help-13">File Type Verification</dt>
<dd>Certain types of files are not commonly allowed in extensions.  These are mainly binary and executable files including, but not limited to: .exe, .dll, .dylib, .so, and .sh.  An add-on containing one of these extension types will generate a warning.</dd>

<dt id="help-14">JavaScript Namespace Pollution Tests</dt>
<dd>JavaScript gives users the ability to define objects in the global namespace easily overwriting pre-existing data or functions.  This test scans the add-on for any instances where this can occur and generates a warning for every global variable and function it finds.</dd>
</dl>

<h2>Security Tests</h2>
<p>This group of tests scans add-ons for potential security vulnerabilities.</p>

<dl>
<dt id="help-21">Unsafe JavaScript Tests</dt>
<dd>This test scans add-ons for common security mistakes that could make using your add-on unsafe.  Some example patterns are:

<ul>
    <li>eval()</li>
    <li>setTimeout('with a string')</li>
    <li>&lt;browser&gt; without a type attribute</li>
    <li>mozIJSSubscriptLoader</li>
</ul>

A matched pattern will generate a warning.  Note that since these tests are simply pattern matches, some of the code they match might be false positives, so examine any warnings closely to determine whether this is the case.</dd>

<dt id="help-22">Unsafe Settings Tests</dt>
<dd>This test scans the add-on for some common patterns that can lead to security vulnerabilities.  A matched pattern will generate a warning.  The current tests include:

<table summary="A list of tests that are run when searching for unsafe settings and explanations of what they mean.">
    <tr><th>Test</th><th>Explanation</th></tr>
    <tr>
        <td>
            <ul>
                <li>extensions.update.*</li>
                <li>extensions.*.update.*</li>
                <li>extensions.blocklist.*</li>
            </ul>
        </td>
        <td> Add-ons should not be disabling or tampering with the ability for any add-ons
            to normally update or be blocklisted. This test scans the add-on for preference
            names corresponding to add-on updating or blocklisting settings.
        </td>
    </tr>
</table>

</dd>

<dt id="help-23">Remote Javascript Tests</dt>
<dd>This test searches for any -moz-binding attribute whose url is not of the form <em>chrome://&lt;something&gt;/content/</em>, and generates a warning for every match it finds.</dd>

<dt id="help-24">Common Library Checksum Tests</dt>
<dd>Many add-ons contain common JavaScript libraries to make development easier and add functionality to the add-on.  This test scans for several well-known libraries, and compares the known public hash to that of the file in the add-on.  A warning is generated if the checksum doesn't match.</dd>
</dl>

<h2>Extension-specific Tests</h2>
<p>This group of tests scans add-ons for potential problems that are specific to extensions.  This includes verifying the existence of required files, checking for extra files, along with some additional tests described below.</p>

<dl>
<dt id="help-121">Geolocation Check</dt>
<dd>This test scans for the use of either geolocation or wifi in an add-on.  This is allowed but it must be done in a way that the user is informed and has consented.</dd>

<dt id="help-122">Conduit Toolbar Check</dt>
<dd>Conduit Toolbars are currently not allowed on addons.mozilla.org.  If this test matches a warning will be generated.</dd>
</dl>

<h2>Dictionary Tests</h2>
<p>This group of tests scans add-ons for potential problems that are specific to dictionaries.  This includes verifying the existence of required files, checking for extra files, along with some additional tests described below.</p>

<dl>
<dt id="help-211">File Layout Check</dt>
<dd>Dictionaries, at a minimum, must cointain an install.rdf file, along with a .aff and .dic file in the dictionaries folder for the given locale.  This test generates a failure for each missing file in the dictionary.</dd>

<dt id="help-212">File Type Verification</dt>
<dd>This test verifes that the add-on does not contain any extra files.  For dictionaries, the allowed list of file types is:

<ul>
    <li>dictionaries/&lt;locale&gt;.aff</li>
    <li>dictionaries/&lt;locale&gt;.dic</li>
    <li>install.js</li>
    <li>install.rdf</li>
    <li>*.txt</li>
</ul>

Any other files will generate warnings.</dd>

<dt id="help-213">SeaMonkey Valid Files Check</dt>
<dd>If the dictionary's install.rdf file claims to support SeaMonkey this test verfies that the add-on does in fact support SeaMonkey.  This checks for the existence of the install.js file within the add-on.</dd>

<dt id="help-221">install.js Verification</dt>
<dd>This test scans the install.js file (if present) for potential security problems and other flaws.  Warnings are generated for each problem found.</dd>
</dl>

<h2>Language Pack Tests</h2>
<p>This group of tests scans add-ons for potential problems that are specific to language packs.  This includes verifying the existence of required files and checking for extra files, along with some additional tests described below.</p>

<dl>
<dt id="help-311">File Layout Check</dt>
<dd>Language Packs, at a minimum, must cointain an install.rdf file, a chrome.manifest file, and at least one .jar file in the chrome folder.  This test generates a failure for each missing file in the dictionary.</dd>

<dt id="help-312">File Type Verification</dt>
<dd>This test verifes that the add-on does not contain any extra files.  For language packs, the allowed list of file types is:

<ul>
    <li>*.rdf</li>
    <li>*.manifest</li>
    <li>*.jar</li>
    <li>*.dtd</li>
    <li>*.properties</li>
    <li>*.xhtml</li>
    <li>*.css</li>
</ul>

Any other files will generate warnings.</dd>

<dt id="help-321">Unsafe HTML Check</dt>
<dd>Language packs should not contain any script, object, or embed elements.  Each occurence generates a warning.</dd>

<dt id="help-322">Remote Loading Check</dt>
<dd>Language pack links should only contain chrome URLs.  Any non-chrome URL will generate a warning.</dd>

<dt id="help-323">Chrome.manifest Check</dt>
<dd>The allowed lines in the chrome.manifest files are comments (#), locale, and override.</dd>
</dl>

<h2>Search Engine Tests</h2>
<p>This group of tests scans add-ons for potential problems that are specific to search engines.  This includes parsing and verifying the format of the search engine's XML file.</p>

<dl>
<dt id="help-511">OpenSearch Check</dt>
<dd>Search engines should conform to the OpenSearch format.  Search engines that cannot be parsed using OpenSearch will be rejected.</dd>

<dt id="help-521">UpdateURL check</dt>
<dd>Search engines are not allowed to specify an updateURL as all updates are handled through the AMO update service.</dd>

</dl>

<h2>Theme Tests</h2>
<p>This group of tests scans add-ons for potential problems that are specific to themes.  This includes verifying the existence of required files, and checking for a valid chrome.manifest file.</p>

<dl>
<dt id="help-411">File Layout Check</dt>
<dd>Themes, at a minimum, must cointain an install.rdf file and a chrome.manifest file.  This test generates a failure for each missing file in the theme.</dd>

<dt id="help-421">Chrome.manifest Check</dt>
<dd>The allowed lines in the chrome.manifest files are comments (#), skin, and style.  Lines that do not match one of these three patterns generate a warning.</dd>

</dl>

