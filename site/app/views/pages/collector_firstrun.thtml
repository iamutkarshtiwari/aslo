<?php
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is addons.mozilla.org site.
 *
 * The Initial Developer of the Original Code is
 * The Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Jeff Balogh <jbalogh@mozilla.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

$this->layout = 'amo2009';

$breadcrumbs = array(
    sprintf(___('Add-ons for %1$s'), APP_PRETTYNAME) => '/',
    ___('Collections', 'collections_breadcrumb') => '/collections'
);
    // This code is a bit ugly because we need to work within the constraints of the pages controller.
    // Build the collection menu here because we have access to the controllers we need.
    $_collection_menu = '';
    $_favorite_button = '';
    $collections = $this->controller->Collection->getEditorPicks(5);
    /* Need these variables to show the Add to Favorites buttons */
    $user = $this->controller->Session->read('User');
    $subscribe_url = $html->url('/collections/subscribe/ajax');

    foreach ($collections as $collection) {
        $c = $collection['Collection'];
        $uuid = $c['uuid'];
        $_favorite_button = '<div class="collector-firstrun-favorite favorite"> </div>'; // default is no button

        if ($this->controller->Session->check('User')) {
            $fav = $this->controller->Collection->isSubscribed($c['id'], $user['id']);
            if ($fav) {
                continue;
            }
            $text = ___('Add to Favorites');
            $_favorite_button = <<<FAVORITE_BUTTON
                <form class="collector-firstrun-favorite favorite" method="post" action="{$subscribe_url}">
                  <div>
                    {$html->hiddenSession()}
                    <input value="{$uuid}" type="hidden" name="uuid" />
                    <button class="neutral auxillary">
                        {$html->image("amo2009/icons/buttons/plus-orange-8x9.gif", array('alt' => ''))}
                        {$text}
                    </button>
                  </div>
                </form>
FAVORITE_BUTTON;
        }

        $_collection_menu .= <<<COLLECTION_GROUP
        <li>
            <h5>
                 <img src="{$this->controller->Image->getCollectionIconUrl($collection['Collection']['id'])}" class="icon" alt="" />
                 {$html->link($collection['Translation']['name']['string'], $this->controller->Collection->getDetailUrl($collection))}
            </h5>
                 {$_favorite_button}
        </li>
COLLECTION_GROUP;
    }
?>
<div class="section">

  <div class="stand-alone-options">
    <?php
       echo $this->renderElement('amo2009/search');
       echo $this->renderElement('amo2009/categories');
    ?>
  </div>

  <div class="primary" role="main">
    <?=$this->renderElement('amo2009/breadcrumbs', array('breadcrumbs' => $breadcrumbs))?>
    <script type="text/javascript">
      <?=$this->renderElement('amo2009/collections/js_init', array(
          'addButtonSize' => '8x9',
          'removeButtonSize' => '8x9',
          'loadingButtonSize' => '8x8'))?>
    </script>
    <?=$localization->includeLocalPage('collector_firstrun', array(
        $html->url('/pages/collector_features'),
        $html->url('/pages/collector_faq'),
        $_collection_menu,
        $html->url('/collections')
        ))?>
  </div>

  <div class="secondary" role="complementary">
    <?=$html->image('amo2009/illustrations/logo-collections-220x270.png', array( 'class' => 'scale', 'alt' => ___('Add-on Collector Logo')))?>
  </div>

</div>
