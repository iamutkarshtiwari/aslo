<?php
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is addons.mozilla.org site.
 *
 * The Initial Developer of the Original Code is
 * Justin Scott <fligtar@gmail.com>.
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Wil Clouser <wclouser@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

$this->layout = 'amo2009';

loadModel('Application');
loadComponent('Versioncompare');

$applicationModel =& new Application();
$versionCompare =& new VersioncompareComponent();

$applicationModel->unbindModel(array('hasAndBelongsToMany' => array('Version'), 'hasMany' => array('Category')));
$applications = $applicationModel->findAll('Application.supported=1', null, null, null, null, 2);

foreach ($applications as $application) {
    if (empty($versions[$application['Application']['id']]['guid'])) {
        $versions[$application['Application']['id']]['guid'] = $application['Application']['guid'];
        $versions[$application['Application']['id']]['name'] = $application['Translation']['name']['string'];
    }
    
    if (!empty($application['Appversion'])) {
        $appversions = array();
        //Change array structure for sorting
        foreach ($application['Appversion'] as $appversion) {
            $appversions[]['Appversion']['version'] = $appversion['version'];
        }
        $versionCompare->sortAppversionArray($appversions);
        
        foreach ($appversions as $appversion) {
            $versions[$application['Application']['id']]['versions'][] = $appversion['Appversion']['version'];
        }
    }
}
?>

<div class="secondary" role="complementary">
    <?=$this->renderElement('amo2009/categories')?>
</div>

<div class="primary prose" role="main">
    <?=$this->renderElement('amo2009/search')?>

<?php
    echo '<h1>'._('pages_appversions_header').'</h1>';
    echo '<p>'._('pages_appversions_intro').'</p>';
    foreach ($versions as $version) {
        echo '<div>';
            echo '<h3>'.
            $html->image('app-icons/'.strtolower($version['name']).'_small.png', array('style' => 'vertical-align: middle; padding-right: 10px;')).
            '<b>'.$version['name'].'</b></h3>';
            echo '<ul>';
                echo '<li>'._('pages_appversions_guid').': '.$version['guid'].'</li>';
                echo '<li>'._('pages_appversions_versions').': '.implode(', ', $version['versions']);
            echo '</ul>';
        echo '</div>';
    }
    
    echo '<p>'.sprintf(_('pages_appversions_required_files'), $html->link(_('pages_appversions_required_files_link'), 'http://developer.mozilla.org/en/docs/Install_Manifests')).'</p>';
?>

</div>
