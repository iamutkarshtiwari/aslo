<?php
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is addons.mozilla.org site.
 *
 * The Initial Developer of the Original Code is
 * The Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Frederic Wenzel <fwenzel@mozilla.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

// Used for firefox version numbers
vendor('product-details/firefoxDetails.class');

/**
 * Java Script Constants to be imported into javascript files
 * to be used for things like paths, not isAdmin ;)
 */
header('Content-Type: application/x-javascript');
$this->layout = null; // no layout!

// Returns the largest file you can upload to the server, in bytes.
function getMaxFileSize() {
    $size = ini_get('upload_max_filesize');
    switch (substr($size, -1)) {
        case 'M' :
            return (int)$size * 1024 * 1024;
        default :
            return $size; // assume bytes
    }
}

?>
var BASEDIR = "<?=$html->url('/', null, false, false) ?>";
var LANG = "<?=LANG?>";
var APP_ID = "<?=APP_ID?>";
var APP_SHORTNAME = "<?=APP_SHORTNAME?>";
var APP_PRETTYNAME = "<?=APP_PRETTYNAME?>";
var LATEST_FIREFOX_VERSION = '<?=LATEST_FIREFOX_VERSION?>';
var LATEST_FIREFOX_DEVEL_VERSION = '<?=LATEST_FIREFOX_DEVEL_VERSION?>';
var APP_FIREFOX = '<?=APP_FIREFOX?>';
var APP_SEAMONKEY = '<?=APP_SEAMONKEY?>';
var APP_THUNDERBIRD = '<?=APP_THUNDERBIRD?>';
var APP_SUNBIRD = '<?=APP_SUNBIRD?>';
var APP_MOBILE = '<?=APP_MOBILE?>';
var MAXFILESIZE = '<?=getMaxFileSize()?>';
<?php /* generic constants */ ?>
var KEYCODE_ENTER = 13;
<?php
$constants = array(
    'addOnNotAvailableForPlatform' => ___('%1$s is not available for %2$s.'),
    'error_opensearch_unsupported' => ___('Sorry, you need a Mozilla-based browser (such as Firefox) to install a search plugin.'),

    'app_compat_update_firefox' => ___('<a href="http://getfirefox.com">Upgrade Firefox</a> to use this add-on'),
    'app_compat_try_old_version' => ___('An <a href="%1$s">older version</a> may work'),
    'app_compat_older_firefox_only' => ___('This add-on is for older versions of Firefox'),
    'app_compat_unreleased_version' => ___('This add-on requires the not-yet released <a href="%1$s">Firefox %2$s</a>'),
    'app_compat_older_version_or_ignore_check' => ___('You can <a href="%1$s">try an older version</a> or <a href="#" onclick="%2$s">ignore this check</a>'),
    'app_compat_ignore_check' => ___('Ignore version check'),
    'app_compat_incompatible' => ___('This add-on is incompatible with your version of %1$s'),

    /* developers.js */
    'devcp_js_upload_badfilename' => ___('Bad filename received. Files must be of type .xpi, .xml, or .jar', 'devcp_js_upload_badfilename'),
    'devcp_js_upload_toolarge' => sprintf(___('This file is too large. The file must be no bigger than %1$s.', 'devcp_js_upload_toolarge'), ini_get('upload_max_filesize')),
    'devcp_js_upload_alert' => ___('You must select a file to upload.'),
    'addons_status_public' => ___('Public', 'addons_status_public'),
    'addons_status_sandbox' => ___('In Sandbox'),
    'addons_status_pending' => ___('In Sandbox; Pending Review'),
    'devcp_js_img_move_down' => ___('Move Down'),
    'devcp_js_img_move_up' => ___('Move Up'),
    'devcp_js_option_owner' => ___('Owner'),
    'devcp_js_option_developer' => ___('Developer', 'devcp_js_option_developer'),
    'devcp_js_option_viewer' => ___('Viewer'),
    'devcp_js_input_list_author' => ___('List as author in public listings'),
    'devcp_js_sure_remove' => ___('Are you <strong>sure</strong> you wish to remove this author?'),
    'devcp_js_remove_author' => ___('Remove Author'),
    'devcp_js_a_cancel' => ___('Cancel', 'devcp_js_a_cancel'),
    'devcp_js_add_email' => ___('Please enter the account email of the author you wish to add.'),
    'devcp_js_img_remove_compat' => ___('Remove Application Compatibility', 'devcp_js_img_remove_compat'),
    'devcp_js_license_select' => ___('Please select a license.'),
    'devcp_js_license_text' => ___('Please enter text for your license.'),

    // collections
    'collections_edit_submit' => ___('Update Collection'),
    'collections_edit_submit_deletecollection' => ___('Delete Collection', 'collections_edit_submit_deletecollection'),

    /* addons display page */
    'addons_display_collection_publish_success' => ___('%1$s has been added to the %2$s collection.')
);

foreach ($constants as $var_name => $l10n_string) {
    echo sprintf('var %s = "%s";'."\n", $var_name, addslashes($l10n_string));
}
