<?php
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is addons.mozilla.org site.
 *
 * The Initial Developer of the Original Code is
 * The Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Mike Morgan <morgamic@mozilla.com> (Original Author)
 *   Frederic Wenzel <fwenzel@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
?>
<?php
/**
 * This element is used on the front page and can also be used on browse and
 * category pages.  It in turn calls the install element, which works its own
 * magic for install boxes.
 *
 * This element uses the following local variables:
 * - $addonIconPath
 * - $addonThumbPath
 * - $addonName
 * - $addonSummary
 * - $addonId
 * - $addonFiles
 * - $addonEULA
 * - $addonStatus
 * - $addonAuthors
 * - $addonRating
 * - $addonReviews
 * - $addonTags
 * - $addonWeeklyDownloads
 * - $allPlatforms - There should only be one platform in the list when this is used on the eula view.
 * - $compatible_apps
 * - $addonType - default ADDON_EXTENSION
 * - $buttonMessage - default 'a_install'
 * 
 */

// Bug 444817: limit length of addon descriptions in feature elements.
$desc_limit = 250;
if (mb_strlen($addonSummary) > $desc_limit) {
    // If the addon summary exceeds the display limit, cut it off before the
    // last space-delimited word in the string and add an ellipsis linking to
    // the full detail page.  Would use TextHelper::truncate() here, but need
    // mb_* string functions.  

    // mb_substr is used twice here, because mb_strrpos doesn't support 
    // offset in PHP 5.1.6 - first chop down to char limit, then chop down
    // to end of last space-delimited word.
    $addonSummary = mb_substr($addonSummary, 0, $desc_limit);
    $addonSummary = mb_substr($addonSummary, 0, mb_strrpos($addonSummary, ' ')) .
        ' <a href="'.$html->url("/addon/{$addonId}").'">...</a>';
}

// prepare alt and title text for preview image
$_alt = sprintf(_('img_preview_of'), $addonName);

// is addon recommended or experimental?
global $experimental_status;
if (isset($addonStatus) && in_array($addonStatus, $experimental_status))
    $flag = _('addon_listitem_flag_experimental');
else
    $flag = '';
?>

<h4 class="name" title="<?=___('addons_title_tooltip') ?>"><a href="<?=$html->url("/addon/{$addonId}")?>"><img src="<?=$addonIconPath?>" width="32" height="32" alt="" class="icon"/><?=$addonName?></a></h4>
<h5 class="author" title="<?=___('addons_author_tooltip') ?>"><?=_('addons_home_by')?> <?=$html->linkUsersFromModel($addonAuthors, 0);?></h5>
<? if (!empty($flag)) echo '<h6 class="flag">'.$flag.'</h6>'; ?>
<p class="preview-img"><a href="<?=$html->url("/addon/{$addonId}")?>"><img src="<?=$addonThumbPath?>" alt="<?=$_alt?>" title="<?=$_alt?>"/></a></p>
<p class="desc"><?=$addonSummary?></p>
<p class="rating"><?=$this->renderElement('stars',array('rating' => $addonRating))?><?php if ($addonReviews > 0) { ?> <a href="<?=$html->url('/addon/'.$addonId.'#reviews')?>"><?=sprintf(ngettext('feature_reviews','feature_reviews', $addonReviews), $addonReviews)?></a><?php } ?></p>
<p class="stats"><em><?=$html->number_format($addonWeeklyDownloads, 0)?></em>
<?php echo ___('addon_downloads_weekly'); ?>
</p>
<?php if (isset($addonFiles)): ?>

<p class="updated">
    <?php echo sprintf(___('addon_detail_last_updated'), strftime(_('date'), strtotime($addonVersionCreated))); ?>
</p>

<?=$this->renderElement('install',array(
    'addonIconPath' => $addonIconPath,
    'addonName' => $addonName,
    'addonId' => $addonId,
    'addonFiles' => $addonFiles,
    'addonEULA' => $addonEULA,
    'addonStatus' => $addonStatus,
    'is_latest' => ($addonStatus == STATUS_PUBLIC),
    'compatible_apps' => $compatible_apps,
    'allPlatforms' => $allPlatforms,
    'addonType' => $addonType
))?>
<?php else: ?>
<p class="learn-more"><?=$html->link(_('feature_learnmore'), "/addon/{$addonId}",
    array('class'=>'view', 'title'=>sprintf(_('feature_learnmore_about_addon'), $addonName)))?></p>
<?php endif; ?>

<?php if(!empty($addonTags)): ?>
<p class="more-from"><?=_('feature_view_more_from_category')?> <a href="<?=$html->url('/browse/type:'.$addonType.'/cat:'.$addonTags[0]['Tag']['id'])?>" class="view"><?=$addonTags[0]['Translation']['name']['string']?></a></p>
<?php endif; ?>

