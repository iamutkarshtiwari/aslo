<?php
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is addons.mozilla.org site.
 *
 * The Initial Developer of the Original Code is
 * The Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *    RJ Walsh <rwalsh@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
?>      

<? if ($counts[TEST_FAIL] > 0) : ?>        
    <span class="error-count">
        <? if ($short) : ?>
            <?= $counts[TEST_FAIL] ?>
        <? else: ?>
            <?=sprintf(n___('devcp_validate_fail_count', 'devcp_validate_fail_count', $counts[TEST_FAIL], '%d error(s)'), $counts[TEST_FAIL]) ?>
        <? endif; ?>
    </span>
    <? if ($multiline) : ?>
        <br/>
    <? endif; ?>
<? endif; ?>
<? if ($counts[TEST_WARN] > 0) : ?>        
    <span class="warning-count">
        <? if ($short) : ?>
            <?= $counts[TEST_WARN] ?>
        <? else: ?>
            <?=sprintf(n___('devcp_validate_warn_count', 'devcp_validate_warn_count', $counts[TEST_WARN], '%d warning(s)'), $counts[TEST_WARN]) ?>
        <? endif; ?>
    </span>
    <? if ($multiline) : ?>
        <br/>
    <? endif; ?>
<? endif; ?>
<? if ($counts[TEST_PASS] > 0) : ?>        
    <span class="pass-count">
        <? if ($short) : ?>
            <?= $counts[TEST_PASS] ?>
        <? else: ?>
            <?=sprintf(n___('devcp_validate_pass_count', 'devcp_validate_pass_count', $counts[TEST_PASS], '%d pass(es)'), $counts[TEST_PASS]) ?>
        <? endif; ?>
    </span>
<? endif; ?>
<? if ($counts == array(0,0,0)) : ?> 
    <span><i><?=___('devcp_error_no_test_results', 'No test results found.')?></i></span>
<? endif; ?>
<? if ($short) : ?>
    <span class="loading-count">Running test ...</span>
<? endif; ?>
